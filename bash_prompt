# @gf3’s Sexy Bash Prompt, inspired by “Extravagant Zsh Prompt”
# Shamelessly copied from https://github.com/gf3/dotfiles

if [[ $COLORTERM = gnome-* && $TERM = xterm ]] && infocmp gnome-256color >/dev/null 2>&1; then
	export TERM=gnome-256color
elif infocmp xterm-256color >/dev/null 2>&1; then
	export TERM=xterm-256color
fi

if tput setaf 1 &> /dev/null; then
	tput sgr0
    # These colors don't match up with their names either on Ubuntu 12.04 or OSX
	if [[ $(tput colors) -ge 256 ]] 2>/dev/null; then
		MAGENTA=$(tput setaf 9)
		ORANGE=$(tput setaf 172)
		GREEN=$(tput setaf 190)
		PURPLE=$(tput setaf 141)
		WHITE=$(tput setaf 255)
	else
		MAGENTA=$(tput setaf 5)
		ORANGE=$(tput setaf 4)
		GREEN=$(tput setaf 2)
		PURPLE=$(tput setaf 1)
		WHITE=$(tput setaf 7)
	fi
	BOLD=$(tput bold)
	RESET=$(tput sgr0)
else
	MAGENTA="\033[1;31m"
	ORANGE="\033[1;33m"
	GREEN="\033[1;32m"
	PURPLE="\033[1;35m"
	WHITE="\033[1;37m"
	BOLD=""
	RESET="\033[m"
fi


# https://github.com/git/git/blob/master/contrib/completion/git-prompt.sh
# Show an '*' if the repo has uncommitted content
GIT_PS1_SHOWDIRTYSTATE=true

# Show a '$' if there is stashed content
#GIT_PS1_SHOWSTASHSTATE=true

# Show a '%' if there are untracked files
#GIT_PS1_SHOWUNTRACKEDFILES=true

# Show a '<' or '>' to show if you are behind or ahead of your upstream
GIT_PS1_SHOWUPSTREAM="auto"

# Uses color to hint at the current dirty state
# Not much use here, since we do colors ourself
#GIT_PS1_SHOWCOLORHINTS=true

# iTerm Tab and Title Customization and prompt customization
# http://sage.ucsc.edu/xtal/iterm_tab_customization.html

# Put the string " [bash]   hostname::/full/directory/path"
# in the title bar using the command sequence
# \[\e]2;[bash]   \h::\]$PWD\[\a\]

# Put the penultimate and current directory 
# in the iterm tab
# \[\e]1;\]$(basename $(dirname $PWD))/\W\[\a\]

PS1="[\t] " # Time
PS1=$PS1"\[${BOLD}${MAGENTA}\]\u " # User
PS1=$PS1"\[$WHITE\]at \[$ORANGE\]\h " # Machine
PS1=$PS1"\[$WHITE\]in \[$GREEN\]\w" # Path
PS1=$PS1"\$(__git_ps1 '\[$WHITE\] on \[$PURPLE\]%s')" # Git Branch
PS1=$PS1"\[$RESET\]" # Reset
PS1=$PS1"\n$ " # Prompt (Finally!)


