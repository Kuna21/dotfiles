# Fix pbpaste in tmux sessions
set-option -g default-command "reattach-to-user-namespace -l zsh"
# act like GNU screen
unbind C-b
set -g prefix C-a

# act like vim
setw -g mode-keys vi
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind-key -r C-h select-window -t :-
bind-key -r C-l select-window -t :+

# splits I can understand (from http://blog.hawkhost.com/2010/06/28/tmux-the-terminal-multiplexer/)
bind | split-window -h
bind - split-window -v

# act like GNU screen
unbind C-b
set -g prefix C-a

set -g status-interval 1
set -g status-justify centre # center align window list
set -g status-left-length 20
set -g status-right-length 140
#set -g status-left '#[fg=green]#H #[fg=black]â€¢ #[fg=green,bright]#(uname -r | cut -c 1-6)#[default]'
#set -g status-right '#[fg=green,bg=black,bright]#(tmux-mem-cpu-load 1) #[fg=red,dim]#(uptime | cut -f 4-5 -d " " | cut -f 1 -d ",") #[fg=white]%a%l:%M %p#[default] #[fg=blue]%Y-%m-%d'

# default statusbar colors
set -g status-fg white
set -g status-bg default
set -g status-attr bright

# scrollback buffer n lines
set -g history-limit 5000

# listen for activity on all windows
set -g bell-action any

# on-screen time for display-panes in ms
set -g display-panes-time 2000

# start window indexing at one instead of zero
set -g base-index 0
set -g renumber-windows on

set -g mode-mouse on
set -g mouse-resize-pane on
set -g mouse-select-pane on
#set -g screens termcap
set -g default-terminal   "screen-256color"       # screen, with colours
set -g terminal-overrides 'xterm*:smcup@:rmcup@'  # enable native xterm scrolling where availablemouse-select-window on

# reload config
bind r source-file ~/.tmux.conf \; display-message "config reloaded..."

# color
# tmux uses screens termcap
set -g default-terminal   "screen-256color"       # screen, with colours
set -g terminal-overrides 'xterm*:smcup@:rmcup@'  # enable native xterm
# scrolling where available

# Past magic from Thoughtbot
# http://robots.thoughtbot.com/tmux-copy-paste-on-os-x-a-better-future
# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"
