[user]
	name = Jordan Eldredge
	email = jordan@jordaneldredge.com
[color]
	ui = auto
[diff]
	renames = copies
[merge]
	stat = true
[core]
	excludesfile = ~/.gitignore
[advice]
	statusHints = false
[help]
	autocorrect = 1
[alias]
	# Some typos
	commmit = commit
	stats = status
	praise = blame

	ad = add
	ap = add -p
	ada = add -A
	br = branch
	ch = checkout
	cm = commit -m
	co = commit
	dc = diff --cached
	up = !git fetch origin && git rebase origin/master
	lg = !"git lg1"
	lg1 = log --graph --all --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(bold white)â€” %an%C(reset)%C(bold yellow)%d%C(reset)' --abbrev-commit --date=relative
	ls = ls-files
	st = status
	recent = "!r() { cur=$(git rev-parse --abbrev-ref HEAD); git for-each-ref --sort=-committerdate refs/heads/ --format='%(color:yellow)%(refname:short)|%(color:bold               green)%(committerdate:relative)|%(color:blue)%(subject)|%(color:magenta)%(authorname)%(color:reset)' | sed \"s/m${cur}|/m* ${cur}|/\" | column -ts'|'; }; r"

	# Show files ignored by git:
	ign = ls-files -o -i --exclude-standard
	# Backup the working directory without a commit
	snapshot = !git stash save "snapshot: $(date)" && git stash apply "stash@{0}"
	ship = "!gitmergeto() { export tmp_branch=`git branch | grep '* ' | tr -d '* '` && git checkout master && git merge $tmp_branch && git push; unset tmp_branch; }; gitmergeto"

	# Hearsay Social specific
	# Create a new branch from upstream master
	bru = "!sh -c \"git checkout -b $1 upstream/master\" -"
[include]
	path = ~/.gitconfig.local
[github]
	user = captbaritone
[push]
	default = current
